//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/antoniocortes/j2objcprj/relases/j2objc/testing/mockito/build_result/java/org/mockito/internal/util/reflection/Constructors.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionConstructors")
#ifdef RESTRICT_OrgMockitoInternalUtilReflectionConstructors
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionConstructors 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionConstructors 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilReflectionConstructors

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalUtilReflectionConstructors_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionConstructors || defined(INCLUDE_OrgMockitoInternalUtilReflectionConstructors))
#define OrgMockitoInternalUtilReflectionConstructors_

@class IOSClass;
@class JavaLangReflectConstructor;

@interface OrgMockitoInternalUtilReflectionConstructors : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Returns the no arg constructor of the type if any.
 @param classToMock The type to look for a no-arg constructor
 @return The no-arg constructor or null if none is declared.
 */
+ (JavaLangReflectConstructor *)noArgConstructorOfWithIOSClass:(IOSClass *)classToMock;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionConstructors)

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionConstructors_init(OrgMockitoInternalUtilReflectionConstructors *self);

FOUNDATION_EXPORT JavaLangReflectConstructor *OrgMockitoInternalUtilReflectionConstructors_noArgConstructorOfWithIOSClass_(IOSClass *classToMock);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionConstructors)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionConstructors")
