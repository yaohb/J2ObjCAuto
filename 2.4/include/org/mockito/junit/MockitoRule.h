//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/antoniocortes/j2objcprj/relases/j2objc/testing/mockito/build_result/java/org/mockito/junit/MockitoRule.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoJunitMockitoRule")
#ifdef RESTRICT_OrgMockitoJunitMockitoRule
#define INCLUDE_ALL_OrgMockitoJunitMockitoRule 0
#else
#define INCLUDE_ALL_OrgMockitoJunitMockitoRule 1
#endif
#undef RESTRICT_OrgMockitoJunitMockitoRule

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoJunitMockitoRule_) && (INCLUDE_ALL_OrgMockitoJunitMockitoRule || defined(INCLUDE_OrgMockitoJunitMockitoRule))
#define OrgMockitoJunitMockitoRule_

#define RESTRICT_OrgJunitRulesMethodRule 1
#define INCLUDE_OrgJunitRulesMethodRule 1
#include "org/junit/rules/MethodRule.h"

/*!
 @brief The JUnit rule can be used instead of <code>org.mockito.runners.MockitoJUnitRunner</code>.
 It requires JUnit at least 4.7.
  This rule adds following behavior: 
 <ul>
    <li>
       Initializes mocks annotated with <code>org.mockito.Mock</code>,
       so that explicit usage of <code>org.mockito.MockitoAnnotations.initMocks(Object)</code> is not necessary.
       Mocks are initialized before each test method.   
 <li>
       validates framework usage after each test method. See javadoc for <code>org.mockito.Mockito.validateMockitoUsage()</code>.
  </ul>
  Example use: 
 <pre class="code"><code class="java">
  public class ExampleTest {
      &#064;Rule
      public MockitoRule rule = MockitoJUnit.rule();     
 &#064;Mock
      private List list;     
 &#064;Test
      public void shouldDoSomething() {
          list.add(100);
      } } 
 </code>
@endcode
 @since 1.10.17
 */
@protocol OrgMockitoJunitMockitoRule < OrgJunitRulesMethodRule, JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoJunitMockitoRule)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoJunitMockitoRule)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgMockitoJunitMockitoRule")
